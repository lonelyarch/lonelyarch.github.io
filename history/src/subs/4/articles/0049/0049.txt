<article>
	<div><header class="w3-header"><p>Java 运行时数据区</p></header></div>
	<div><img class="w3-width" alt="Oops" src="src/subs/4/articles/0049/images/00.jpg" /></div>
	<div><p><strong>程序计数器</strong></p></div>
	<div><p>程序计数器（Program Counter Register）是一块较小的内存空间<samp>，</samp>它可以看作是当前线程所执行的字节码的行号指示器。在虚拟机的概念模型里（仅是概念模型<samp>，</samp>各种虚拟机可能会通过一些更高效的方式去实现）<samp>，</samp>字节码解释器工作时就是通过改变这个计数器的值来选取下一条需要执行的字节码指令<samp>，</samp>分支、循环、跳转、异常处理、线程恢复等基础功能都需要依赖这个计数器来完成。</p></div>
	<div><p>由于 Java 虚拟机的多线程是通过线程轮流切换并分配处理器执行时间的方式来实现的<samp>，</samp>在任何一个确定的时刻<samp>，</samp>一个处理器（对于多核处理器来说是一个内核）只会执行一条线程中的指令。因此<samp>，</samp>为了线程切换后能恢复到正确的执行位置<samp>，</samp>每条线程都需要有一个独立的程序计数器<samp>，</samp>各条线程之间的计数器互不影响<samp>，</samp>独立存储<samp>，</samp>我们称这类内存区域为<samp>“线程私有”</samp>的内存。</p></div>
	<div><p>如果线程正在执行的是一个 Java 方法<samp>，</samp>这个计数器记录的是正在执行的虚拟机字节码指令的地址<samp>；</samp>如果正在执行的是 Natvie 方法<samp>，</samp>这个计数器值则为空（Undefined）。此内存区域是唯一一个在 Java 虚拟机规范中没有规定任何 OutOfMemoryError 情况的区域。</p></div>
</article>