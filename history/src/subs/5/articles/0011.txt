<article>
	<div><header class="w3-header"><p>[LeetCode] Container With Most Water 装最多水的容器 </p></header></div>
	<div><p>Given n non-negative integers a1, a2, ..., an, where each represents a point at coordinate (i, ai). n vertical lines are drawn such that the two endpoints of line i is at (i, ai) and (i, 0). Find two lines, which together with x-axis forms a container, such that the container contains the most water.</p></div>
	<div><p>Note: You may not slant the container.</p></div>
	<div class="w3-custom-code w3-lightslategray"><pre>public class LC0011 {

	public static int func(int[] height) {
		int res = 0, i = 0, j = height.length - 1;
		while (i &lt; j) {
			res = Math.max(res, Math.min(height[i], height[j]) * (j - i));
			if (height[i] &lt; height[j]) ++i;
			else --j;
		}
		return res;
	}

	public static void main(String[] args) {
		int[] height = { 10, 1, 2, 3, 4, 5, 6, 7, 11 };
		int res = func(height);
		System.out.println("res: " + res);
	}
}</pre></div>
	<div class="w3-custom-code w3-lightslategray"><pre>public class LC0011 {

	public static int func(int[] height) {
		int res = 0, i = 0, j = height.length - 1;
		while (i &lt; j) {
			int h = Math.min(height[i], height[j]);
			res = Math.max(res, h * (j - i));
			while (i &lt; j &amp;&amp; h == height[i]) ++i;
			while (i &lt; j &amp;&amp; h == height[j]) --j;
		}
		return res;
	}

	public static void main(String[] args) {
		int[] height = { 10, 1, 2, 3, 4, 5, 6, 7, 11 };
		int res = func(height);
		System.out.println("res: " + res);
	}
}</pre></div>
</article>