<article>
	<div><header class="w3-header"><p>[LeetCode] Reverse Nodes in k-Group 每 k 个一组翻转链表</p></header></div>
	<div><p>Given a linked list, reverse the nodes of a linked list k at a time and return its modified list.</p></div>
	<div><p>If the number of nodes is not a multiple of k then left-out nodes in the end should remain as it is.</p></div>
	<div><p>You may not alter the values in the nodes, only nodes itself may be changed.</p></div>
	<div><p>Only constant memory is allowed.</p></div>
	<div><p>For example,</p></div>
	<div><p>Given this linked list: 1-&gt;2-&gt;3-&gt;4-&gt;5</p></div>
	<div><p>For k = 2, you should return: 2-&gt;1-&gt;4-&gt;3-&gt;5</p></div>
	<div><p>For k = 3, you should return: 3-&gt;2-&gt;1-&gt;4-&gt;5</p></div>
	<div class="w3-custom-code w3-lightslategray"><pre>public class LC0025 {

	public static class ListNode {

		int value;
		ListNode next;

		ListNode(int value) {
			this.value = value;
			this.next = null;
		}

		@Override
		public String toString() {
			return null == next ? this.value + "" : this.value + " -&gt; " + next;
		}
	}

	public static ListNode func(ListNode head, int k) {
		if (head == null || k == 1)
			return head;

		ListNode fake = new ListNode(0);
		fake.next = head;
		ListNode pre = fake;
		int i = 0;

		ListNode p = head;
		while (p != null) {
			i++;
			if (i % k == 0) {
				pre = reverse(pre, p.next);
				p = pre.next;
			} else {
				p = p.next;
			}
		}

		return fake.next;
	}

	<span class="w3-text-white">/*</span>
	 <span class="w3-text-white">* 0-&gt;1-&gt;2-&gt;3-&gt;4-&gt;5-&gt;6</span>
	 <span class="w3-text-white">* |           |</span>   
	 <span class="w3-text-white">* pre        next</span>
	 <span class="w3-text-white">*</span>
	 <span class="w3-text-white">* after calling pre = reverse(pre, next)</span>
	 <span class="w3-text-white">*</span> 
	 <span class="w3-text-white">* 0-&gt;3-&gt;2-&gt;1-&gt;4-&gt;5-&gt;6</span>
	 <span class="w3-text-white">*          |  |</span>
	 <span class="w3-text-white">*          pre next</span> 
	 <span class="w3-text-white">*/</span>
	public static ListNode reverse(ListNode pre, ListNode next) {
		ListNode last = pre.next;
		ListNode curr = last.next;

		while (curr != next) {
			last.next = curr.next;
			curr.next = pre.next;
			pre.next = curr;
			curr = last.next;
		}

		return last;
	}

	public static void main(String[] args) {
		int[] arr1 = { 1, 2, 3, 4, 5, 6, 7, 8, 9 };
		ListNode l0 = null;
		ListNode l1 = null;
		for (int i = 0; i &lt; arr1.length; i++) {
			if (null == l1) {
				l1 = new ListNode(arr1[i]);
				l0 = l1;
			} else {
				l0.next = new ListNode(arr1[i]);
				l0 = l0.next;
			}
		}
		int k = 3;
		ListNode ln = func(l1, k);
		System.out.println(ln);
	}
}</pre></div>
</article>